name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        ports:
        - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
          POSTGRES_HOSTNAME: 0.0.0.0
          POSTGRES_DB: rails_tailwind_alpine_test

    steps:
      - uses: actions/checkout@v1

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - name: Setup ruby ${{ steps.versions.outputs.ruby}}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.versions.outputs.ruby}}

      - name: Setup node ${{ steps.versions.outputs.nodejs}}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ steps.versions.outputs.nodejs}}

      - name: Cache ruby deps
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache node modules
        uses: actions/cache@v2
        with:
            path: node_modules
            key: ${{ runner.os }}-build-node_modules-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-node-

      - name: Install node deps
        run: yarn

      - name: Install ruby deps
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Lint
        run: |
          bundle exec rubocop

      - name: Build and run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/rails_tailwind_alpine_test
        run: |
          bundle exec rake db:migrate
          bundle exec rake spec
